# егэ 23 (демо 21)Р-09

def f(a, b):
    if a == b:  # если дошли до пункта назначения
        return 1
    if a > b:  # если перепрыгнули пункт назначения, то обратно уже не вернемся
        return 0  # сюда же через or пишем условие, если какое-то число нужно избегать в траектории.
    if a < b:
        return f(a + 1, b) + f(a * 2, b)


print(f(1, 10) * f(10, 20))


# p-06 предпоследняя команда - команда 1
def f(a, b, k):  # k = 1 или 2, номер команды
    if a == b:
        return 1
    if a > b:
        return 0
    if k == 2:
        # тут именно 24 а не b, потому что иначе
        # исключится пара чисел в середине
        if a + 1 != 24 and a * 2 != 24:
            return f(a + 1, b, 1) + f(a * 2, b, 2)
        return f(a + 1, b, 1)
    return f(a + 1, b, 1) + f(a * 2, b, 2)


print(f(4, 24, 1))
'''for i in range(4, 25):
    print(i, f(4, i, 1))'''

# 176
'''
176)	Исполнитель Калькулятор преобразует число, записанное на экране. У исполнителя есть три команды, которым присвоены номера: 
1. Прибавь 1
2. Прибавь 2
3. Умножь на 3
Первая команда увеличивает число на экране на 1, вторая увеличивает его на 2,
третья – умножает на 3. Программа для исполнителя – это последовательность
команд. Сколько существует программ, которые преобразуют исходное число 2
в число 38, и при этом траектория вычислений содержит числа 15 и 30,
а также не содержит чисел 12 и 20.
Также программа не должна содержать двух команд «Умножь на 3» подряд.
'''


def f(a, b, k):  # k - количество операций умножения на 3
    if a == b:  # если дошли до пункта назначения
        return 1
    if a > b or a == 12 or a == 20:  # если перепрыгнули пункт назначения, то обратно уже не вернемся
        return 0  # сюда же через or пишем условие, если вдруг какое-то число нужно избегать в траектории.
    if a < b:
        if k < 2:
            return f(a + 1, b, 0) + f(a + 2, b, 0) + f(a * 3, b, k + 1)
        else:
            return f(a + 1, b, 0) + f(a + 2, b, 0)


print(f(2, 15, 0) * f(15, 30, 0) * f(30, 38, 0))

# 4502
a = set()
a.add(1)
for i in range(6):
    b = set()
    for j in a:
        b.add(j + 1)
        b.add(j + 2)
        b.add(j * 2)
    a = b
k = 0
for x in a:
    if 34 <= x <= 59:
        k += 1
print(k)
